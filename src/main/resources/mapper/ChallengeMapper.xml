<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.spring.mapper.ChallengeMapper">

	<select resultType="com.spring.dto.Challenge" 
			id="getAllChall">
		SELECT chall_id, chall_reg_id, region_id, chall_name, chall_intro, chall_start_date, chall_end_date, chall_all_auth, chall_week_auth,chall_category, chall_sit, chall_auth, chall_online, chall_size, chall_pic
		FROM challenge 
	</select>

	<select resultType="com.spring.dto.Challenge" 
			id="getChallByChallId">
		SELECT chall_id, chall_reg_id, region_id, chall_name, chall_intro, chall_start_date, chall_end_date, chall_all_auth, chall_week_auth,chall_category, chall_sit, chall_auth, chall_online, chall_size, chall_pic
		FROM challenge
		WHERE chall_id = #{chall_id} 
	</select>

	<select resultType="com.spring.dto.User" 
			id="getHostByChallId">
		SELECT user_id, nickname, user_title, user_pic
		FROM rh_user
		WHERE user_id = (SELECT chall_reg_id 
						 FROM challenge 
						 where chall_id = #{chall_id}) 
	</select>

	<select resultType="com.spring.dto.UserChallenge" 
			id="getUserByChallId">
		SELECT rh_user.user_id, user_chall.chall_id, user_chall.chall_auth_num, user_chall.chall_reg_status, user_chall.user_chall_status, user_chall.user_reg_status, user_chall.user_deny_num, rh_user.nickname, rh_user.intro, rh_user.user_title, rh_user.user_pic
		FROM user_chall, rh_user
		WHERE user_chall.chall_id = #{chall_id} and rh_user.user_id = user_chall.user_id
	</select>

	<update id="applyByChallId" 
			parameterType="com.spring.dto.UserChallenge">
		MERGE INTO user_chall
		using dual
		on (user_id=#{applyId} and chall_id=#{chall_id})
		WHEN MATCHED THEN
			UPDATE
				SET user_reg_status = 'Y'
		WHEN NOT MATCHED THEN
			INSERT (user_id,chall_id,user_reg_status)
			VALUES (#{applyId},#{chall_id},'Y') 
	</update>
	
	<delete id="withdrawByChallId" 
			parameterType="com.spring.dto.UserChallenge">
			delete 
			from user_chall 
			where user_id = #{applyId} and chall_id=#{chall_id}
	
	</delete>
	
	<update id="acceptIdbyChallId"
			parameterType="com.spring.dto.UserChallenge">
			UPDATE user_chall
			SET chall_reg_status = 'Y'
			WHERE user_id=#{acceptId} and chall_id=#{chall_id}
	</update>
	
	<update id="declineIdbyChallId"
			parameterType="com.spring.dto.UserChallenge">
			UPDATE user_chall
			SET user_reg_status = 'N', user_deny_num =  user_deny_num+1
			WHERE user_id=#{declineId} and chall_id=#{chall_id}
	</update>
	
	<update id="kickIdbyChallId"
			parameterType="com.spring.dto.UserChallenge">
			UPDATE user_chall
			SET user_reg_status = 'N', user_deny_num =  user_deny_num+1, chall_reg_status = 'N'
			WHERE user_id=#{kickId} and chall_id=#{chall_id}
	</update>

	<select resultType="com.spring.dto.Challenge" 
			id="getChallByOption" 
			parameterType="java.util.List">
		SELECT chall_id, chall_reg_id, region_id, chall_name, chall_intro, chall_start_date, chall_end_date, chall_all_auth, chall_week_auth,chall_category, chall_sit, chall_auth, chall_online, chall_size, chall_pic
		FROM challenge 
		<trim prefixOverrides="AND |OR" prefix="WHERE">
			<if test="!online.isEmpty()">
				chall_online IN 
				<foreach close=")" open="(" separator="," index="idx" item="value" collection="online">
					#{value} 
				</foreach>
			</if>
			<if test="!date.isEmpty()">
				AND extract (month from chall_start_date) in 
				<foreach close=")" open="(" separator="," index="idx" item="value" collection="date">
					#{value} 
				</foreach>
			</if>
			<if test="!cat.isEmpty()">
				AND chall_category IN 
				<foreach close=")" open="(" separator="," index="idx" item="value" collection="cat">
					#{value} 
				</foreach>
			</if>
			<if test="!con.isEmpty()">
				AND chall_sit IN 
				<foreach close=")" open="(" separator="," index="idx" item="value" collection="con">
					#{value} 
				</foreach>
			</if>
			<if test="!state.isEmpty() and city.isEmpty()">
				AND region_id IN (select region_id from region where region_state IN 
				<foreach close=")" open="(" separator="," index="idx" item="value" collection="state">
					#{value} 
				</foreach>
				) 
			</if>
			<if test="!state.isEmpty() and !city.isEmpty()">
				AND region_id IN (select region_id from region where region_city in 
				<foreach close=")" open="(" separator="," index="idx" item="value" collection="city">
					#{value} 
				</foreach>
				) 
			</if>
			<if test="!keyword.isEmpty()">
				AND chall_name LIKE '%'||#{keyword}||'%' 
			</if>
		</trim>
	</select>
	
	<insert id="insertChallenge" parameterType="com.spring.dto.Challenge">
 		INSERT INTO challenge 
 				(chall_name,
 				chall_id,
 				chall_reg_id,
 				 chall_intro, 
 			 		chall_start_date, 
 						chall_end_date, 
 			 				chall_size,
 			 					chall_category,
 			 						region_id,
 			 							chall_sit,
 			 								chall_online,
 			 									chall_all_auth,
 			 										race_id) 
 			 		VALUES (#{chall_name},
 			 		challenge_req.NEXTVAL,
 			 					#{chall_reg_id}, 
 			 					#{chall_intro},
 			 						#{chall_start_date},
 			 							#{chall_end_date}, 
 			 								#{chall_size}, 
 			 									#{chall_category},
 			 										#{region_id},
 			 											#{chall_sit},
 			 												#{chall_online},
 			 													#{chall_all_auth},
 			 														#{race_id})
			<selectKey keyProperty="chall_id" resultType="int">
				SELECT challenge_req.CURRVAL AS chall_id FROM DUAL
			</selectKey>
 	</insert>
</mapper>